{"ast":null,"code":"import\"antd/es/card/style\";import _Card from\"antd/es/card\";import\"antd/es/modal/style\";import _Modal from\"antd/es/modal\";import\"antd/es/table/style\";import _Table from\"antd/es/table\";import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/icon/style\";import _Icon from\"antd/es/icon\";import _regeneratorRuntime from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/regenerator\";import\"antd/es/message/style\";import _message from\"antd/es/message\";import _asyncToGenerator from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import LinkButton from'../../components/link-button';import{reqCategories}from'../../api';import AddForm from'./add-form';import UpdateForm from'./update-form';var Category=/*#__PURE__*/function(_Component){_inherits(Category,_Component);function Category(){var _getPrototypeOf2;var _this;_classCallCheck(this,Category);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Category)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={categories:[],// first level category\nsubCategories:[],loading:false,// used to determine whether it is in the process of getting data\nparentId:'a',// the parent Id of the first level category\nparentName:'',// the name of the first level category\nshowModalStatus:0// the status of modal, 0: both are hidden, 1: show add modal, 2: show update modal\n};_this.initColumns=function(){_this.columns=[{title:'Category',dataIndex:'name'},{title:'Action',width:300,render:function render(category){return(// return the tags for actions\nReact.createElement(\"span\",null,React.createElement(LinkButton,{onClick:_this.showUpdateModal},\"Edit\"),_this.state.parentId==='a'?React.createElement(LinkButton,{onClick:function onClick(){return _this.showSubCategories(category);}},\"Check sub-categories\"):null));}}];};_this.getCategories=/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var parentId,categories;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// show loading before send the request\n_this.setState({loading:true});parentId=_this.state.parentId;_context.next=4;return reqCategories(parentId);case 4:categories=_context.sent;_this.setState({loading:false});if(categories){if(parentId==='a'){_this.setState({categories:categories});}else{_this.setState({subCategories:categories});}}else{_message.error('failed to get category!');}case 7:case\"end\":return _context.stop();}}},_callee);}));_this.showSubCategories=function(category){// update the state \n// * setState() is an asynchrnous update now, so we have to put getCategories() in callback so that we can get the new parentId!\n_this.setState({parentId:category._id,parentName:category.name},function(){// get the sub categories\n_this.getCategories();});};_this.showCategories=function(){// set the states for showing the parent categories\n_this.setState({parentId:'a',parentName:'',subCategories:[]});};_this.showAddModal=function(){_this.setState({showModalStatus:1});};_this.showUpdateModal=function(){_this.setState({showModalStatus:2});};_this.addCategory=function(){console.log('addCategory');};_this.updateCategory=function(){console.log('updateCategory');};_this.handleCancel=function(){_this.setState({showModalStatus:0});};return _this;}_createClass(Category,[{key:\"componentWillMount\",// used to load data before the first render\nvalue:function componentWillMount(){this.initColumns();}// for ajax request \n},{key:\"componentDidMount\",value:function componentDidMount(){this.getCategories();}},{key:\"render\",value:function render(){var _this$state=this.state,categories=_this$state.categories,subCategories=_this$state.subCategories,parentId=_this$state.parentId,parentName=_this$state.parentName,loading=_this$state.loading,showModalStatus=_this$state.showModalStatus;// setup the left side of card\nvar title=parentId==='a'?\"Product's categories\":React.createElement(\"span\",null,React.createElement(LinkButton,{onClick:this.showCategories},\"Product's categories\"),React.createElement(_Icon,{type:\"arrow-right\",style:{marginRight:5}}),React.createElement(\"span\",null,parentName));// setup the right side of card\nvar extra=React.createElement(_Button,{type:\"primary\",onClick:this.showAddModal},React.createElement(_Icon,{type:\"plus\"}),\"Add\");return React.createElement(_Card,{title:title,extra:extra},React.createElement(_Table,{bordered:true,rowKey:\"_id\",loading:loading,dataSource:parentId==='a'?categories:subCategories,columns:this.columns,pagination:{defaultPageSize:6,showQuickJumper:true}}),React.createElement(_Modal,{title:\"Add a Category\",visible:showModalStatus===1,onOk:this.addCategory,onCancel:this.handleCancel},React.createElement(AddForm,null)),React.createElement(_Modal,{title:\"Update a category\",visible:showModalStatus===2,onOk:this.updateCategory,onCancel:this.handleCancel},React.createElement(UpdateForm,null)));}}]);return Category;}(Component);export{Category as default};","map":{"version":3,"sources":["/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/containers/category/category.js"],"names":["React","Component","LinkButton","reqCategories","AddForm","UpdateForm","Category","state","categories","subCategories","loading","parentId","parentName","showModalStatus","initColumns","columns","title","dataIndex","width","render","category","showUpdateModal","showSubCategories","getCategories","setState","error","_id","name","showCategories","showAddModal","addCategory","console","log","updateCategory","handleCancel","marginRight","extra","defaultPageSize","showQuickJumper"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Table, Button, Icon, message, Modal } from 'antd';\n\nimport LinkButton from '../../components/link-button';\nimport { reqCategories } from '../../api';\nimport AddForm from './add-form';\nimport UpdateForm from './update-form';\n\nexport default class Category extends Component {\n\n    state = {\n        categories: [], // first level category\n        subCategories: [],\n        loading: false, // used to determine whether it is in the process of getting data\n        parentId: 'a', // the parent Id of the first level category\n        parentName: '', // the name of the first level category\n        showModalStatus: 0, // the status of modal, 0: both are hidden, 1: show add modal, 2: show update modal\n    }\n\n    // initiate the column of table \n    initColumns = () => {\n        this.columns = [\n            {\n                title: 'Category',\n                dataIndex: 'name',\n            },\n            {\n                title: 'Action',\n                width: 300,\n                render: (category) => ( // return the tags for actions\n                    <span>\n                        <LinkButton onClick={this.showUpdateModal}>Edit</LinkButton>\n                        {this.state.parentId === 'a' ? <LinkButton onClick={() => this.showSubCategories(category)}>Check sub-categories</LinkButton> : null}\n                    </span>\n                )\n            },\n        ]\n    }\n\n    // get a list of categories by ajax \n    getCategories = async () => {\n        // show loading before send the request\n        this.setState({ loading: true });\n        const { parentId } = this.state;\n\n        const categories = await reqCategories(parentId);\n\n        this.setState({ loading: false });\n\n        if (categories) {\n            if (parentId === 'a') {\n                this.setState({\n                    categories\n                });\n            } else {\n                this.setState({\n                    subCategories: categories\n                });\n            }\n\n        } else {\n            message.error('failed to get category!');\n        }\n\n    }\n\n    // show the sub categories based on the parent category\n    showSubCategories = (category) => {\n        // update the state \n        // * setState() is an asynchrnous update now, so we have to put getCategories() in callback so that we can get the new parentId!\n        this.setState({\n            parentId: category._id,\n            parentName: category.name\n        }, () => {\n            // get the sub categories\n            this.getCategories();\n        });\n    }\n\n    // show the parent categories\n    showCategories = () => {\n        // set the states for showing the parent categories\n        this.setState({\n            parentId: 'a',\n            parentName: '',\n            subCategories: []\n        });\n    }\n\n    // show the add modal\n    showAddModal = () => {\n        this.setState({\n            showModalStatus: 1\n        });\n    }\n\n    // show the update modal\n    showUpdateModal = () => {\n        this.setState({\n            showModalStatus: 2\n        });\n    }\n\n    // add a category\n    addCategory = () => {\n        console.log('addCategory');\n    }\n\n    // update a category\n    updateCategory = () => {\n        console.log('updateCategory');\n    }\n\n\n    // hide the modal\n    handleCancel = () => {\n        this.setState({\n            showModalStatus: 0\n        });\n    }\n\n    // used to load data before the first render\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    // for ajax request \n    componentDidMount() {\n        this.getCategories();\n    }\n\n    render() {\n\n        const { categories, subCategories, parentId, parentName, loading, showModalStatus } = this.state;\n\n        // setup the left side of card\n        const title = parentId === 'a' ? \"Product's categories\" : (\n            <span>\n                <LinkButton onClick={this.showCategories}>Product's categories</LinkButton>\n                <Icon type='arrow-right' style={{ marginRight: 5 }} />\n                <span>{parentName}</span>\n            </span>\n        );\n\n        // setup the right side of card\n        const extra = (\n            <Button type=\"primary\" onClick={this.showAddModal}>\n                <Icon type=\"plus\" />\n                Add\n            </Button>\n        );\n\n        return (\n            <Card title={title} extra={extra} >\n                <Table\n                    bordered\n                    rowKey='_id'\n                    loading={loading}\n                    dataSource={parentId === 'a' ? categories : subCategories}\n                    columns={this.columns}\n                    pagination={{ defaultPageSize: 6, showQuickJumper: true }}\n                />\n\n                <Modal\n                    title=\"Add a Category\"\n                    visible={showModalStatus === 1}\n                    onOk={this.addCategory}\n                    onCancel={this.handleCancel}\n                >\n                    <AddForm />\n                </Modal>\n\n                <Modal\n                    title=\"Update a category\"\n                    visible={showModalStatus === 2}\n                    onOk={this.updateCategory}\n                    onCancel={this.handleCancel}\n                >\n                    <UpdateForm />\n                </Modal>\n            </Card>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}