{"ast":null,"code":"'use strict';\n\nvar ES = require('es-abstract/es6');\n\nmodule.exports = function find(predicate) {\n  var list = ES.ToObject(this);\n  var length = ES.ToLength(list.length);\n\n  if (!ES.IsCallable(predicate)) {\n    throw new TypeError('Array#find: predicate must be a function');\n  }\n\n  if (length === 0) {\n    return void 0;\n  }\n\n  var thisArg;\n\n  if (arguments.length > 0) {\n    thisArg = arguments[1];\n  }\n\n  for (var i = 0, value; i < length; i++) {\n    value = list[i]; // inlined for performance: if (ES.Call(predicate, thisArg, [value, i, list])) {\n\n    if (predicate.apply(thisArg, [value, i, list])) {\n      return value;\n    }\n  }\n\n  return void 0;\n};","map":null,"metadata":{},"sourceType":"script"}