{"ast":null,"code":"import \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/form/style\";\nimport _Form from \"antd/es/form\";\nimport \"antd/es/input/style\";\nimport _Input from \"antd/es/input\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/containers/SignUp/SignUp.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { reqSignup } from '../../api';\nimport memoryUtils from '../../utils/memoryUtils';\nimport './SignUp.less';\nimport logo from '../../assets/images/logo.jpeg';\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = e => {\n      // the default action that belongs to the event will be cancelled !! \n      e.preventDefault(); // validate the value from input\n\n      this.props.form.validateFields(async (err, values) => {\n        if (!err) {\n          //console.log('Submit success!', values);\n          const username = values.username,\n                password = values.password,\n                email = values.email;\n          const response = await reqSignup(username, password, email);\n\n          _message.success('Sign up successful!', response);\n\n          this.props.history.replace('/login');\n        } else {\n          console.log('Submit is failed!');\n        }\n      });\n    };\n\n    this.validatePassword = (rule, value, callback) => {\n      console.log('validatePassword', rule, value);\n\n      if (!value) {\n        callback('Please input your password!');\n      } else if (value.length < 4) {\n        callback('Please input at least 4 characters!');\n      } else if (value.length > 12) {\n        callback('Please do not input more than 12 characters!');\n      } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n        callback('Please includes english and numbers!');\n      } else {\n        callback();\n      }\n    };\n\n    this.confirmPassword = (rule, value, callback) => {\n      const password = this.password;\n      console.log('validatePassword', rule, value);\n\n      if (!value) {\n        callback('Please input your password!');\n      } else if (value.length < 4) {\n        callback('Please input at least 4 characters!');\n      } else if (value.length > 12) {\n        callback('Please do not input more than 12 characters!');\n      } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n        callback('Please includes english and numbers!');\n      } else if (!confirmPassword === password) {\n        callback('The password should be matched each other!');\n      } else {\n        callback();\n      }\n    };\n  }\n\n  render() {\n    // get form object \n    const form = this.props.form;\n    const getFieldDecorator = form.getFieldDecorator;\n    return React.createElement(\"div\", {\n      className: \"signup\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"signup-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Content Management System\")), React.createElement(\"section\", {\n      className: \"signup-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(_Form, {\n      onSubmit: this.handleSubmit,\n      className: \"signup-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, getFieldDecorator('username', {\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: 'Please input your username!'\n      }, {\n        min: 4,\n        message: 'Please input at least 4 characters!'\n      }, {\n        max: 12,\n        message: 'Please do not input more than 12 characters!'\n      }, {\n        pattern: /^[a-zA-Z0-9_]+$/,\n        message: 'Please includes english and numbers!'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"user\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }),\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        validator: this.validatePassword\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }),\n      type: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, getFieldDecorator('password', {\n      rules: [{\n        validator: this.confirmPassword\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"lock\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }),\n      type: \"confirmPassword\",\n      placeholder: \"Confirm password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, getFieldDecorator('email', {\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: 'Please input your email!'\n      }, {\n        min: 4,\n        message: 'Please input at least 4 characters!'\n      }, {\n        max: 100,\n        message: 'Please do not input more than 100 characters!'\n      }]\n    })(React.createElement(_Input, {\n      prefix: React.createElement(_Icon, {\n        type: \"solution\",\n        style: {\n          color: 'rgba(0,0,0,.25)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }),\n      type: \"email\",\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }))), React.createElement(_Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(_Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      className: \"signup-form-button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Sign up\")))));\n  }\n\n} //Form.create()() is a higher order function(HOF) and WrappedLogin is a higher order component(HOC)\n\n\nconst WrappedSignup = _Form.create()(SignUp);\n\nexport default WrappedSignup;","map":{"version":3,"sources":["/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/containers/SignUp/SignUp.js"],"names":["React","Component","Redirect","reqSignup","memoryUtils","logo","SignUp","handleSubmit","e","preventDefault","props","form","validateFields","err","values","username","password","email","response","success","history","replace","console","log","validatePassword","rule","value","callback","length","test","confirmPassword","render","getFieldDecorator","rules","required","whitespace","message","min","max","pattern","color","validator","WrappedSignup","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Icon, Input, Button, message } from 'antd';\nimport { Redirect } from 'react-router-dom';\nimport { reqSignup } from '../../api';\nimport memoryUtils from '../../utils/memoryUtils';\n\nimport './SignUp.less';\nimport logo from '../../assets/images/logo.jpeg';\n\nclass SignUp extends Component {\n\n    handleSubmit = e => {\n        // the default action that belongs to the event will be cancelled !! \n        e.preventDefault();\n        // validate the value from input\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                //console.log('Submit success!', values);\n                const { username, password, email } = values;\n                const response = await reqSignup(username, password, email);\n                message.success('Sign up successful!', response);\n                this.props.history.replace('/login');              \n            } else {\n                console.log('Submit is failed!');\n            }\n        });\n    };\n\n    // custom validation for password\n    validatePassword = (rule, value, callback) => {\n        console.log('validatePassword', rule, value);\n        if (!value) {\n            callback('Please input your password!');\n        } else if (value.length < 4) {\n            callback('Please input at least 4 characters!');\n        } else if (value.length > 12) {\n            callback('Please do not input more than 12 characters!');\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n            callback('Please includes english and numbers!');\n        } else {\n            callback();\n        }\n    }\n\n    confirmPassword = (rule, value, callback) => {\n        const password = this.password;\n        \n        console.log('validatePassword', rule, value);\n        if (!value) {\n            callback('Please input your password!');\n        } else if (value.length < 4) {\n            callback('Please input at least 4 characters!');\n        } else if (value.length > 12) {\n            callback('Please do not input more than 12 characters!');\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n            callback('Please includes english and numbers!');\n        } else if(!confirmPassword === password) {\n            callback('The password should be matched each other!');\n        } else {\n            callback();\n        }\n    }\n\n    render() {\n        // get form object \n        const form = this.props.form;\n        const { getFieldDecorator } = form;\n\n        return (\n            <div className=\"signup\">\n                <header className=\"signup-header\">\n                    <img src={logo} alt=\"logo\" />\n                    <h1>Content Management System</h1>\n                </header>\n                <section className=\"signup-content\">\n                    <h2>Sign Up</h2>\n                    <Form onSubmit={this.handleSubmit} className=\"signup-form\">\n                        <Form.Item>\n                            {\n                                /* \n                                    setup the input for collecting data and validating the values\n                                */\n                            }\n                            {getFieldDecorator('username', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        whitespace: true,\n                                        message: 'Please input your username!'\n                                    },\n                                    {\n                                        min: 4,\n                                        message: 'Please input at least 4 characters!'\n                                    },\n                                    {\n                                        max: 12,\n                                        message: 'Please do not input more than 12 characters!'\n                                    },\n                                    {\n                                        pattern: /^[a-zA-Z0-9_]+$/,\n                                        message: 'Please includes english and numbers!'\n                                    },\n                                ],\n                            })(<Input\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"Username\"\n                            />,\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('password', {\n                                rules: [\n                                    {\n                                        validator: this.validatePassword\n                                    }],\n                            })(<Input\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />)}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('password', {\n                                rules: [\n                                    {\n                                        validator: this.confirmPassword\n                                    }],\n                            })(<Input\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                type=\"confirmPassword\"\n                                placeholder=\"Confirm password\"\n                            />)}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('email', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        whitespace: true,\n                                        message: 'Please input your email!'\n                                    },\n                                    {\n                                        min: 4,\n                                        message: 'Please input at least 4 characters!'\n                                    },\n                                    {\n                                        max: 100,\n                                        message: 'Please do not input more than 100 characters!'\n                                    },\n                                ],\n                            })(<Input\n                                prefix={<Icon type=\"solution\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                type=\"email\"\n                                placeholder=\"Email\"\n                            />)}\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"signup-form-button\">\n                                Sign up\n                            </Button>\n                        </Form.Item>\n                    </Form>\n                </section>\n            </div>\n        )\n    }\n}\n\n//Form.create()() is a higher order function(HOF) and WrappedLogin is a higher order component(HOC)\nconst WrappedSignup = Form.create()(SignUp);\nexport default WrappedSignup;\n"]},"metadata":{},"sourceType":"module"}