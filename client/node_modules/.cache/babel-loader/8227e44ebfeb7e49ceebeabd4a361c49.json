{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = range;\n\nvar _and = _interopRequireDefault(require(\"./and\"));\n\nvar _between = _interopRequireDefault(require(\"./between\"));\n\nvar _integer = _interopRequireDefault(require(\"./integer\"));\n\nvar _isInteger = _interopRequireDefault(require(\"./helpers/isInteger\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n/* istanbul ignore next */\nMath.pow(2, 53) - 1;\n\nfunction isValidLength(x) {\n  return (0, _isInteger[\"default\"])(x) && Math.abs(x) < MAX_SAFE_INTEGER;\n}\n\nfunction range(min, max) {\n  if (!isValidLength(min) || !isValidLength(max)) {\n    throw new RangeError(\"\\\"range\\\" requires two integers: \".concat(min, \" and \").concat(max, \" given\"));\n  }\n\n  if (min === max) {\n    throw new RangeError('min and max must not be the same');\n  }\n\n  return (0, _wrapValidator[\"default\"])((0, _and[\"default\"])([(0, _integer[\"default\"])(), (0, _between[\"default\"])({\n    gte: min,\n    lt: max\n  })], 'range'), 'range', {\n    min: min,\n    max: max\n  });\n}","map":null,"metadata":{},"sourceType":"script"}