{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = shapeValidator;\n\nvar _isPlainObject = _interopRequireDefault(require(\"./helpers/isPlainObject\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction shapeValidator(shapeTypes) {\n  if (!(0, _isPlainObject[\"default\"])(shapeTypes)) {\n    throw new TypeError('shape must be a normal object');\n  }\n\n  function shape(props, propName, componentName, location) {\n    var propValue = props[propName];\n\n    if (propValue == null) {\n      return null;\n    } // code adapted from PropTypes.shape: https://github.com/facebook/react/blob/14156e56b9cf18ac86963185c5af4abddf3ff811/src/isomorphic/classic/types/ReactPropTypes.js#L381\n    // eslint-disable-next-line guard-for-in, no-restricted-syntax\n\n\n    for (var _len = arguments.length, rest = new Array(_len > 4 ? _len - 4 : 0), _key = 4; _key < _len; _key++) {\n      rest[_key - 4] = arguments[_key];\n    }\n\n    for (var key in shapeTypes) {\n      var checker = shapeTypes[key];\n\n      if (checker) {\n        var error = checker.apply(void 0, [propValue, key, componentName, location].concat(rest));\n\n        if (error) {\n          return error;\n        }\n      }\n    }\n\n    return null;\n  }\n\n  shape.isRequired = function shapeRequired(props, propName, componentName) {\n    var propValue = props[propName];\n\n    if (propValue == null) {\n      return new TypeError(\"\".concat(componentName, \": \").concat(propName, \" is required.\"));\n    }\n\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n\n    return shape.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n\n  return (0, _wrapValidator[\"default\"])(shape, 'shape', shapeTypes);\n}","map":null,"metadata":{},"sourceType":"script"}