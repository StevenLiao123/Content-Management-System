{"ast":null,"code":"'use strict';\n\nvar GetIntrinsic = require('./GetIntrinsic');\n\nvar ES2016 = require('./es2016');\n\nvar assign = require('./helpers/assign');\n\nvar forEach = require('./helpers/forEach');\n\nvar callBind = require('./helpers/callBind');\n\nvar $TypeError = GetIntrinsic('%TypeError%');\n\nvar callBound = require('./helpers/callBound');\n\nvar $isEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar $pushApply = callBind.apply(GetIntrinsic('%Array.prototype.push%'));\nvar $arrayPush = callBound('Array.prototype.push');\nvar ES2017 = assign(assign({}, ES2016), {\n  ToIndex: function ToIndex(value) {\n    if (typeof value === 'undefined') {\n      return 0;\n    }\n\n    var integerIndex = this.ToInteger(value);\n\n    if (integerIndex < 0) {\n      throw new RangeError('index must be >= 0');\n    }\n\n    var index = this.ToLength(integerIndex);\n\n    if (!this.SameValueZero(integerIndex, index)) {\n      throw new RangeError('index must be >= 0 and < 2 ** 53 - 1');\n    }\n\n    return index;\n  },\n  // https://www.ecma-international.org/ecma-262/8.0/#sec-enumerableownproperties\n  EnumerableOwnProperties: function EnumerableOwnProperties(O, kind) {\n    var keys = ES2016.EnumerableOwnNames(O);\n\n    if (kind === 'key') {\n      return keys;\n    }\n\n    if (kind === 'value' || kind === 'key+value') {\n      var results = [];\n      forEach(keys, function (key) {\n        if ($isEnumerable(O, key)) {\n          $pushApply(results, [kind === 'value' ? O[key] : [key, O[key]]]);\n        }\n      });\n      return results;\n    }\n\n    throw new $TypeError('Assertion failed: \"kind\" is not \"key\", \"value\", or \"key+value\": ' + kind);\n  },\n  // https://www.ecma-international.org/ecma-262/8.0/#sec-iterabletolist\n  IterableToList: function IterableToList(items, method) {\n    var iterator = this.GetIterator(items, method);\n    var values = [];\n    var next = true;\n\n    while (next) {\n      next = this.IteratorStep(iterator);\n\n      if (next) {\n        var nextValue = this.IteratorValue(next);\n        $arrayPush(values, nextValue);\n      }\n    }\n\n    return values;\n  }\n});\ndelete ES2017.EnumerableOwnNames; // replaced with EnumerableOwnProperties\n\ndelete ES2017.IterableToArrayLike; // replaced with IterableToList\n\nmodule.exports = ES2017;","map":null,"metadata":{},"sourceType":"script"}