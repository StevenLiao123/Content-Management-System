{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _enzymeAdapterUtils = require('enzyme-adapter-utils');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    'default': obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nfunction getFiber(element) {\n  var container = global.document.createElement('div');\n  var inst = null;\n\n  var Tester = function (_React$Component) {\n    _inherits(Tester, _React$Component);\n\n    function Tester() {\n      _classCallCheck(this, Tester);\n\n      return _possibleConstructorReturn(this, (Tester.__proto__ || Object.getPrototypeOf(Tester)).apply(this, arguments));\n    }\n\n    _createClass(Tester, [{\n      key: 'render',\n      value: function () {\n        function render() {\n          inst = this;\n          return element;\n        }\n\n        return render;\n      }()\n    }]);\n\n    return Tester;\n  }(_react2['default'].Component);\n\n  _reactDom2['default'].render(_react2['default'].createElement(Tester), container);\n\n  return inst._reactInternalFiber.child;\n}\n\nfunction getLazyFiber(LazyComponent) {\n  var container = global.document.createElement('div');\n  var inst = null; // eslint-disable-next-line react/prefer-stateless-function\n\n  var Tester = function (_React$Component2) {\n    _inherits(Tester, _React$Component2);\n\n    function Tester() {\n      _classCallCheck(this, Tester);\n\n      return _possibleConstructorReturn(this, (Tester.__proto__ || Object.getPrototypeOf(Tester)).apply(this, arguments));\n    }\n\n    _createClass(Tester, [{\n      key: 'render',\n      value: function () {\n        function render() {\n          inst = this;\n          return _react2['default'].createElement(LazyComponent);\n        }\n\n        return render;\n      }()\n    }]);\n\n    return Tester;\n  }(_react2['default'].Component); // eslint-disable-next-line react/prefer-stateless-function\n\n\n  var SuspenseWrapper = function (_React$Component3) {\n    _inherits(SuspenseWrapper, _React$Component3);\n\n    function SuspenseWrapper() {\n      _classCallCheck(this, SuspenseWrapper);\n\n      return _possibleConstructorReturn(this, (SuspenseWrapper.__proto__ || Object.getPrototypeOf(SuspenseWrapper)).apply(this, arguments));\n    }\n\n    _createClass(SuspenseWrapper, [{\n      key: 'render',\n      value: function () {\n        function render() {\n          return _react2['default'].createElement(_react2['default'].Suspense, {\n            fallback: false\n          }, _react2['default'].createElement(Tester));\n        }\n\n        return render;\n      }()\n    }]);\n\n    return SuspenseWrapper;\n  }(_react2['default'].Component);\n\n  _reactDom2['default'].render(_react2['default'].createElement(SuspenseWrapper), container);\n\n  return inst._reactInternalFiber.child;\n}\n\nmodule.exports = function () {\n  function detectFiberTags() {\n    var supportsMode = typeof _react2['default'].StrictMode !== 'undefined';\n    var supportsContext = typeof _react2['default'].createContext !== 'undefined';\n    var supportsForwardRef = typeof _react2['default'].forwardRef !== 'undefined';\n    var supportsMemo = typeof _react2['default'].memo !== 'undefined';\n    var supportsProfiler = typeof _react2['default'].unstable_Profiler !== 'undefined' || typeof _react2['default'].Profiler !== 'undefined';\n    var supportsSuspense = typeof _react2['default'].Suspense !== 'undefined';\n    var supportsLazy = typeof _react2['default'].lazy !== 'undefined';\n\n    function Fn() {\n      return null;\n    } // eslint-disable-next-line react/prefer-stateless-function\n\n\n    var Cls = function (_React$Component4) {\n      _inherits(Cls, _React$Component4);\n\n      function Cls() {\n        _classCallCheck(this, Cls);\n\n        return _possibleConstructorReturn(this, (Cls.__proto__ || Object.getPrototypeOf(Cls)).apply(this, arguments));\n      }\n\n      _createClass(Cls, [{\n        key: 'render',\n        value: function () {\n          function render() {\n            return null;\n          }\n\n          return render;\n        }()\n      }]);\n\n      return Cls;\n    }(_react2['default'].Component);\n\n    var Ctx = null;\n    var FwdRef = null;\n    var LazyComponent = null;\n\n    if (supportsContext) {\n      Ctx = _react2['default'].createContext();\n    }\n\n    if (supportsForwardRef) {\n      // React will warn if we don't have both arguments.\n      // eslint-disable-next-line no-unused-vars\n      FwdRef = _react2['default'].forwardRef(function (props, ref) {\n        return null;\n      });\n    }\n\n    if (supportsLazy) {\n      LazyComponent = _react2['default'].lazy(function () {\n        return (0, _enzymeAdapterUtils.fakeDynamicImport)(function () {\n          return null;\n        });\n      });\n    }\n\n    return {\n      HostRoot: getFiber('test')['return']['return'].tag,\n      // Go two levels above to find the root\n      ClassComponent: getFiber(_react2['default'].createElement(Cls)).tag,\n      Fragment: getFiber([['nested']]).tag,\n      FunctionalComponent: getFiber(_react2['default'].createElement(Fn)).tag,\n      MemoSFC: supportsMemo ? getFiber(_react2['default'].createElement(_react2['default'].memo(Fn))).tag : -1,\n      MemoClass: supportsMemo ? getFiber(_react2['default'].createElement(_react2['default'].memo(Cls))).tag : -1,\n      HostPortal: getFiber(_reactDom2['default'].createPortal(null, global.document.createElement('div'))).tag,\n      HostComponent: getFiber(_react2['default'].createElement('span')).tag,\n      HostText: getFiber('text').tag,\n      Mode: supportsMode ? getFiber(_react2['default'].createElement(_react2['default'].StrictMode)).tag : -1,\n      ContextConsumer: supportsContext ? getFiber(_react2['default'].createElement(Ctx.Consumer, null, function () {\n        return null;\n      })).tag : -1,\n      ContextProvider: supportsContext ? getFiber(_react2['default'].createElement(Ctx.Provider, {\n        value: null\n      }, null)).tag : -1,\n      ForwardRef: supportsForwardRef ? getFiber(_react2['default'].createElement(FwdRef)).tag : -1,\n      Profiler: supportsProfiler ? getFiber(_react2['default'].createElement(_react2['default'].Profiler || _react2['default'].unstable_Profiler, {\n        id: 'mock',\n        onRender: function () {\n          function onRender() {}\n\n          return onRender;\n        }()\n      })).tag : -1,\n      Suspense: supportsSuspense ? getFiber(_react2['default'].createElement(_react2['default'].Suspense, {\n        fallback: false\n      })).tag : -1,\n      Lazy: supportsLazy ? getLazyFiber(LazyComponent).tag : -1\n    };\n  }\n\n  return detectFiberTags;\n}(); //# sourceMappingURL=detectFiberTags.js.map","map":null,"metadata":{},"sourceType":"script"}