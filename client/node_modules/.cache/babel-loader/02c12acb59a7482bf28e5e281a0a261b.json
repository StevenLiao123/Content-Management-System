{"ast":null,"code":"import \"antd/es/card/style\";\nimport _Card from \"antd/es/card\";\nimport \"antd/es/table/style\";\nimport _Table from \"antd/es/table\";\nimport \"antd/es/button/style\";\nimport _Button from \"antd/es/button\";\nimport \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/message/style\";\nimport _message from \"antd/es/message\";\nvar _jsxFileName = \"/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/containers/category/category.js\";\nimport React, { Component } from 'react';\nimport LinkButton from '../../components/link-button';\nimport { reqCategories } from '../../api';\nexport default class Category extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      categories: [],\n      // first level category\n      subCategories: [],\n      loading: false,\n      // used to determine whether it is in the process of getting data\n      parentId: '0',\n      // the parent Id of the first level category\n      parentName: '' // the name of the first level category\n\n    };\n\n    this.initColumns = () => {\n      this.columns = [{\n        title: 'Category',\n        dataIndex: 'name'\n      }, {\n        title: 'Action',\n        width: 300,\n        render: category => // return the tags for actions\n        React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, React.createElement(LinkButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(LinkButton, {\n          onClick: () => this.showSubCategories(category),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"Check sub-categories\"))\n      }];\n    };\n\n    this.getCategories = async () => {\n      // show loading before send the request\n      this.setState({\n        loading: true\n      });\n      const parentId = this.state;\n      const categories = await reqCategories(parentId);\n      this.setState({\n        loading: false\n      });\n\n      if (categories) {\n        if (parentId === '0') {\n          this.setState({\n            categories\n          });\n        } else {\n          this.setState({\n            subCategories: categories\n          });\n        }\n      } else {\n        _message.error('failed to get category!');\n      }\n    };\n\n    this.showSubCategories = category => {\n      // update the state\n      this.setState({\n        parentId: category._id,\n        parentName: category.name\n      });\n      console.log('parentId', this.state.parentId); // get the sub categories\n\n      this.getCategories();\n    };\n  }\n\n  // used to load data before the first render\n  componentWillMount() {\n    this.initColumns();\n  } // for ajax request \n\n\n  componentDidMount() {\n    this.getCategories();\n  }\n\n  render() {\n    const _this$state = this.state,\n          categories = _this$state.categories,\n          loading = _this$state.loading; // setup the left side of card\n\n    const title = \"Product's categories\"; // setup the right side of card\n\n    const extra = React.createElement(_Button, {\n      type: \"primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(_Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), \"Add\");\n    const dataSource = [{\n      \"_id\": \"5dad4a88fd19020bd325914b\",\n      \"parentId\": 0,\n      \"name\": \"Household Appliances\",\n      \"__v\": 0\n    }, {\n      \"_id\": \"5dad4fa6a53d070c44054b76\",\n      \"parentId\": 0,\n      \"name\": \"Books\",\n      \"__v\": 0\n    }, {\n      \"_id\": \"5dad5083a53d070c44054b77\",\n      \"parentId\": 0,\n      \"name\": \"Computers\",\n      \"__v\": 0\n    }, {\n      \"_id\": \"5dad5098a53d070c44054b78\",\n      \"parentId\": 0,\n      \"name\": \"Foods\",\n      \"__v\": 0\n    }];\n    return React.createElement(_Card, {\n      title: title,\n      extra: extra,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(_Table, {\n      bordered: true,\n      rowKey: \"_id\",\n      loading: loading,\n      dataSource: categories,\n      columns: this.columns,\n      pagination: {\n        defaultPageSize: 6,\n        showQuickJumper: true\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/containers/category/category.js"],"names":["React","Component","LinkButton","reqCategories","Category","state","categories","subCategories","loading","parentId","parentName","initColumns","columns","title","dataIndex","width","render","category","showSubCategories","getCategories","setState","error","_id","name","console","log","componentWillMount","componentDidMount","extra","dataSource","defaultPageSize","showQuickJumper"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SAASC,aAAT,QAA8B,WAA9B;AAEA,eAAe,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE5CI,KAF4C,GAEpC;AACJC,MAAAA,UAAU,EAAE,EADR;AACY;AAChBC,MAAAA,aAAa,EAAE,EAFX;AAGJC,MAAAA,OAAO,EAAE,KAHL;AAGY;AAChBC,MAAAA,QAAQ,EAAE,GAJN;AAIW;AACfC,MAAAA,UAAU,EAAE,EALR,CAKY;;AALZ,KAFoC;;AAAA,SAW5CC,WAX4C,GAW9B,MAAM;AAChB,WAAKC,OAAL,GAAe,CACX;AACIC,QAAAA,KAAK,EAAE,UADX;AAEIC,QAAAA,SAAS,EAAE;AAFf,OADW,EAKX;AACID,QAAAA,KAAK,EAAE,QADX;AAEIE,QAAAA,KAAK,EAAE,GAFX;AAGIC,QAAAA,MAAM,EAAGC,QAAD,IAAgB;AACpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAM,KAAKC,iBAAL,CAAuBD,QAAvB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFJ;AAJR,OALW,CAAf;AAgBH,KA5B2C;;AAAA,SA+B5CE,aA/B4C,GA+B5B,YAAY;AACxB;AACA,WAAKC,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMC,QAAQ,GAAG,KAAKJ,KAAtB;AAEA,YAAMC,UAAU,GAAG,MAAMH,aAAa,CAACM,QAAD,CAAtC;AAEA,WAAKW,QAAL,CAAc;AAAEZ,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAGF,UAAH,EAAe;AACX,YAAGG,QAAQ,KAAK,GAAhB,EAAqB;AACjB,eAAKW,QAAL,CAAc;AACVd,YAAAA;AADU,WAAd;AAGH,SAJD,MAIO;AACH,eAAKc,QAAL,CAAc;AACVb,YAAAA,aAAa,EAAED;AADL,WAAd;AAGH;AAEJ,OAXD,MAWO;AACH,iBAAQe,KAAR,CAAc,yBAAd;AACH;AAEJ,KAvD2C;;AAAA,SA0D5CH,iBA1D4C,GA0DvBD,QAAD,IAAc;AAC9B;AACA,WAAKG,QAAL,CAAc;AACVX,QAAAA,QAAQ,EAAEQ,QAAQ,CAACK,GADT;AAEVZ,QAAAA,UAAU,EAAEO,QAAQ,CAACM;AAFX,OAAd;AAIAC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwB,KAAKpB,KAAL,CAAWI,QAAnC,EAN8B,CAQ9B;;AACA,WAAKU,aAAL;AACH,KApE2C;AAAA;;AAsE5C;AACAO,EAAAA,kBAAkB,GAAG;AACjB,SAAKf,WAAL;AACH,GAzE2C,CA2E5C;;;AACAgB,EAAAA,iBAAiB,GAAG;AAChB,SAAKR,aAAL;AACH;;AAEDH,EAAAA,MAAM,GAAG;AAAA,wBAE2B,KAAKX,KAFhC;AAAA,UAEGC,UAFH,eAEGA,UAFH;AAAA,UAEeE,OAFf,eAEeA,OAFf,EAIL;;AACA,UAAMK,KAAK,GAAG,sBAAd,CALK,CAOL;;AACA,UAAMe,KAAK,GACP;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,QADJ;AAOA,UAAMC,UAAU,GAAG,CACf;AACI,aAAO,0BADX;AAEI,kBAAY,CAFhB;AAGI,cAAQ,sBAHZ;AAII,aAAO;AAJX,KADe,EAOf;AACI,aAAO,0BADX;AAEI,kBAAY,CAFhB;AAGI,cAAQ,OAHZ;AAII,aAAO;AAJX,KAPe,EAaf;AACI,aAAO,0BADX;AAEI,kBAAY,CAFhB;AAGI,cAAQ,WAHZ;AAII,aAAO;AAJX,KAbe,EAmBf;AACI,aAAO,0BADX;AAEI,kBAAY,CAFhB;AAGI,cAAQ,OAHZ;AAII,aAAO;AAJX,KAnBe,CAAnB;AA4BA,WACI;AAAM,MAAA,KAAK,EAAEhB,KAAb;AAAoB,MAAA,KAAK,EAAEe,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,QAAQ,MADZ;AAEI,MAAA,MAAM,EAAC,KAFX;AAGI,MAAA,OAAO,EAAEpB,OAHb;AAII,MAAA,UAAU,EAAEF,UAJhB;AAKI,MAAA,OAAO,EAAE,KAAKM,OALlB;AAMI,MAAA,UAAU,EAAE;AAAEkB,QAAAA,eAAe,EAAE,CAAnB;AAAsBC,QAAAA,eAAe,EAAE;AAAvC,OANhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAYH;;AAvI2C","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Table, Button, Icon, message } from 'antd';\n\nimport LinkButton from '../../components/link-button';\nimport { reqCategories } from '../../api';\n\nexport default class Category extends Component {\n\n    state = {\n        categories: [], // first level category\n        subCategories: [], \n        loading: false, // used to determine whether it is in the process of getting data\n        parentId: '0', // the parent Id of the first level category\n        parentName: '', // the name of the first level category\n    }\n\n    // initiate the column of table \n    initColumns = () => {\n        this.columns = [\n            {\n                title: 'Category',\n                dataIndex: 'name',\n            },\n            {\n                title: 'Action',\n                width: 300,\n                render: (category) => ( // return the tags for actions\n                    <span>\n                        <LinkButton>Edit</LinkButton>\n                        <LinkButton onClick={() => this.showSubCategories(category)}>Check sub-categories</LinkButton>\n                    </span>\n                )\n            },\n        ]\n    }\n\n    // get a list of categories by ajax \n    getCategories = async () => {\n        // show loading before send the request\n        this.setState({ loading: true });\n        const parentId = this.state;\n\n        const categories = await reqCategories(parentId);\n\n        this.setState({ loading: false });\n\n        if(categories) {\n            if(parentId === '0') {\n                this.setState({\n                    categories\n                });\n            } else {\n                this.setState({\n                    subCategories: categories\n                });\n            }\n            \n        } else {\n            message.error('failed to get category!');\n        }\n       \n    }\n\n    // show the sub categories based on the parent category\n    showSubCategories = (category) => {\n        // update the state\n        this.setState({\n            parentId: category._id,\n            parentName: category.name\n        });\n        console.log('parentId', this.state.parentId);\n\n        // get the sub categories\n        this.getCategories();\n    }\n\n    // used to load data before the first render\n    componentWillMount() {\n        this.initColumns();\n    }\n\n    // for ajax request \n    componentDidMount() {\n        this.getCategories();\n    }\n\n    render() {\n\n        const { categories, loading } = this.state;\n\n        // setup the left side of card\n        const title = \"Product's categories\";\n\n        // setup the right side of card\n        const extra = (\n            <Button type=\"primary\">\n                <Icon type=\"plus\" />\n                Add\n            </Button>\n        );\n\n        const dataSource = [\n            {\n                \"_id\": \"5dad4a88fd19020bd325914b\",\n                \"parentId\": 0,\n                \"name\": \"Household Appliances\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"5dad4fa6a53d070c44054b76\",\n                \"parentId\": 0,\n                \"name\": \"Books\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"5dad5083a53d070c44054b77\",\n                \"parentId\": 0,\n                \"name\": \"Computers\",\n                \"__v\": 0\n            },\n            {\n                \"_id\": \"5dad5098a53d070c44054b78\",\n                \"parentId\": 0,\n                \"name\": \"Foods\",\n                \"__v\": 0\n            }\n        ];\n\n\n        return (\n            <Card title={title} extra={extra} >\n                <Table\n                    bordered\n                    rowKey='_id'\n                    loading={loading}\n                    dataSource={categories}\n                    columns={this.columns}\n                    pagination={{ defaultPageSize: 6, showQuickJumper: true }}\n                />\n            </Card>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}