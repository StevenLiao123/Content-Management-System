{"ast":null,"code":"import\"antd/es/message/style\";import _message from\"antd/es/message\";/*\n    This module is providing API functions for different requests.\n*/import jsonp from'jsonp';import ajax from'./ajax';var BASE=\"http://localhost:8080\";// Login\nexport var reqLogin=function reqLogin(username,password){return ajax('/user/login',{username:username,password:password},'POST');};// Sign up\nexport var reqSignup=function reqSignup(username,password,email){return ajax('/user/signup',{username:username,password:password,email:email},'POST');};// get a list of categories based on the parentId\nexport var reqCategories=function reqCategories(parentId){return ajax(BASE+'/category/list',{parentId:parentId},'POST');};// Add a category\nexport var reqAddCategory=function reqAddCategory(name,parentId){return ajax(BASE+'/category/add',{name:name,parentId:parentId},'POST');};// Update a category\nexport var reqUpdateCategory=function reqUpdateCategory(_id,name){return ajax(BASE+'/category/update',{_id:_id,name:name},'POST');};// jsonp request for weather\nexport var reqWeather=function reqWeather(city){return new Promise(function(resolve,reject){var url=\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city,\"&appid=5481d01e1f55fc521a219134e8545e8e\");// execute jsonp request\njsonp(url,{},function(error,data){console.log('jsonp',error,data);if(!error){// get the name, icon and description from openWeather API\nvar name=data.name;var icon=data.weather[0].icon;var temp=data.main.temp;resolve({name:name,temp:temp,icon:icon});console.log('jsonp',name,temp,icon);}else{_message.error('Get weather API Failed!');}});});};reqWeather('Sydney');// Add an user\n//export const addUser = (user) => ajax('/user/register', user, 'POST');","map":{"version":3,"sources":["/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/api/index.js"],"names":["jsonp","ajax","BASE","reqLogin","username","password","reqSignup","email","reqCategories","parentId","reqAddCategory","name","reqUpdateCategory","_id","reqWeather","city","Promise","resolve","reject","url","error","data","console","log","icon","weather","temp","main"],"mappings":"oEAAA;;EAGA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CAGA,GAAMC,CAAAA,IAAI,CAAG,uBAAb,CAEA;AACA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWC,QAAX,QAAwBJ,CAAAA,IAAI,CAAC,aAAD,CAAgB,CAAEG,QAAQ,CAARA,QAAF,CAAYC,QAAQ,CAARA,QAAZ,CAAhB,CAAwC,MAAxC,CAA5B,EAAjB,CAEP;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACF,QAAD,CAAWC,QAAX,CAAqBE,KAArB,QAA+BN,CAAAA,IAAI,CAAC,cAAD,CAAiB,CAAEG,QAAQ,CAARA,QAAF,CAAYC,QAAQ,CAARA,QAAZ,CAAsBE,KAAK,CAALA,KAAtB,CAAjB,CAAgD,MAAhD,CAAnC,EAAlB,CAEP;AACA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,QAAD,QAAcR,CAAAA,IAAI,CAACC,IAAI,CAAG,gBAAR,CAA0B,CAACO,QAAQ,CAARA,QAAD,CAA1B,CAAsC,MAAtC,CAAlB,EAAtB,CAEP;AACA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,IAAD,CAAOF,QAAP,QAAoBR,CAAAA,IAAI,CAACC,IAAI,CAAG,eAAR,CAAyB,CAACS,IAAI,CAAJA,IAAD,CAAOF,QAAQ,CAARA,QAAP,CAAzB,CAA2C,MAA3C,CAAxB,EAAvB,CAEP;AACA,MAAO,IAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,GAAD,CAAMF,IAAN,QAAeV,CAAAA,IAAI,CAACC,IAAI,CAAG,kBAAR,CAA4B,CAACW,GAAG,CAAHA,GAAD,CAAMF,IAAI,CAAJA,IAAN,CAA5B,CAAyC,MAAzC,CAAnB,EAA1B,CAGP;AACA,MAAO,IAAMG,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,IAAD,CAAU,CAEhC,MAAO,IAAIC,CAAAA,OAAJ,CAAY,SAACC,OAAD,CAAUC,MAAV,CAAqB,CACpC,GAAMC,CAAAA,GAAG,6DAAwDJ,IAAxD,2CAAT,CAEA;AACAf,KAAK,CAACmB,GAAD,CAAM,EAAN,CAAU,SAACC,KAAD,CAAQC,IAAR,CAAiB,CAC5BC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBH,KAArB,CAA4BC,IAA5B,EACA,GAAI,CAACD,KAAL,CAAY,CACR;AACA,GAAMT,CAAAA,IAAI,CAAGU,IAAI,CAACV,IAAlB,CACA,GAAMa,CAAAA,IAAI,CAAGH,IAAI,CAACI,OAAL,CAAa,CAAb,EAAgBD,IAA7B,CACA,GAAME,CAAAA,IAAI,CAAGL,IAAI,CAACM,IAAL,CAAUD,IAAvB,CACAT,OAAO,CAAC,CAAEN,IAAI,CAAJA,IAAF,CAAQe,IAAI,CAAJA,IAAR,CAAcF,IAAI,CAAJA,IAAd,CAAD,CAAP,CACAF,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBZ,IAArB,CAA2Be,IAA3B,CAAiCF,IAAjC,EACH,CAPD,IAOO,CACH,SAAQJ,KAAR,CAAc,yBAAd,EACH,CACJ,CAZI,CAAL,CAaH,CAjBM,CAAP,CAkBH,CApBM,CAsBPN,UAAU,CAAC,QAAD,CAAV,CAEA;AACA","sourcesContent":["/*\n    This module is providing API functions for different requests.\n*/\nimport jsonp from 'jsonp';\nimport ajax from './ajax';\nimport { message } from 'antd';\n\nconst BASE = \"http://localhost:8080\";\n\n// Login\nexport const reqLogin = (username, password) => ajax('/user/login', { username, password }, 'POST');\n\n// Sign up\nexport const reqSignup = (username, password, email) => ajax('/user/signup', { username, password, email }, 'POST');\n\n// get a list of categories based on the parentId\nexport const reqCategories = (parentId) => ajax(BASE + '/category/list', {parentId}, 'POST');\n\n// Add a category\nexport const reqAddCategory = (name, parentId) => ajax(BASE + '/category/add', {name, parentId}, 'POST');\n\n// Update a category\nexport const reqUpdateCategory = (_id, name) => ajax(BASE + '/category/update', {_id, name}, 'POST');\n\n\n// jsonp request for weather\nexport const reqWeather = (city) => {\n\n    return new Promise((resolve, reject) => {\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=5481d01e1f55fc521a219134e8545e8e`;\n\n        // execute jsonp request\n        jsonp(url, {}, (error, data) => {\n            console.log('jsonp', error, data);\n            if (!error) {\n                // get the name, icon and description from openWeather API\n                const name = data.name;\n                const icon = data.weather[0].icon;\n                const temp = data.main.temp;\n                resolve({ name, temp, icon } );\n                console.log('jsonp', name, temp, icon);\n            } else {\n                message.error('Get weather API Failed!');\n            }\n        });\n    });\n}\n\nreqWeather('Sydney');\n\n// Add an user\n//export const addUser = (user) => ajax('/user/register', user, 'POST');\n"]},"metadata":{},"sourceType":"module"}