{"ast":null,"code":"var _jsxFileName = \"/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/components/header/index.js\";\nimport React, { Component } from 'react';\nimport { reqWeather } from '../../api';\nimport memoryUtils from '../../utils/memoryUtils';\nimport { formatDate } from '../../utils/dateUtils';\nimport './index.less';\nimport { setInterval } from 'timers';\nexport default class Header extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      currentTime: formatDate(Date.now()),\n      name: '',\n      temp: '',\n      icon: ''\n    };\n\n    this.getCurrentTime = () => {\n      // get the current time per 1 second and then update the state of currentTime\n      setInterval(() => {\n        const currentTime = formatDate(Date.now());\n        this.setState({\n          currentTime\n        });\n      }, 1000);\n    };\n\n    this.getWeather = async () => {\n      // get the weather data by invoking the asynchronus API\n      const _ref = await reqWeather('Sydney'),\n            name = _ref.name,\n            temp = _ref.temp,\n            icon = _ref.icon; // update the state\n\n\n      this.setState({\n        name,\n        temp,\n        icon\n      });\n    };\n\n    this.convertKelvinToCelsius = temp => {\n      if (temp < 0) {\n        return 'below absolute zero (0 K)';\n      } else {\n        return temp - 273.15;\n      }\n    };\n  }\n\n  componentDidMount() {\n    // get the current time\n    this.getCurrentTime(); // get the current weather\n\n    this.getWeather();\n  }\n\n  render() {\n    const _this$state = this.state,\n          currentTime = _this$state.currentTime,\n          name = _this$state.name,\n          description = _this$state.description,\n          icon = _this$state.icon;\n    const iconUrl = \"http://openweathermap.org/img/wn/\".concat(icon, \"@2x.png\");\n    const username = memoryUtils.user[0].username;\n    return React.createElement(\"div\", {\n      className: \"header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-top\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Hello, \", username), React.createElement(\"a\", {\n      href: \"javascript:\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Logout\")), React.createElement(\"div\", {\n      className: \"header-bottom\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"header-bottom-left\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Main Page\"), React.createElement(\"div\", {\n      className: \"header-bottom-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, currentTime), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, name), React.createElement(\"img\", {\n      src: iconUrl,\n      alt: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, description))));\n  }\n\n}","map":{"version":3,"sources":["/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/components/header/index.js"],"names":["React","Component","reqWeather","memoryUtils","formatDate","setInterval","Header","state","currentTime","Date","now","name","temp","icon","getCurrentTime","setState","getWeather","convertKelvinToCelsius","componentDidMount","render","description","iconUrl","username","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,yBAAxB;AACA,SAASC,UAAT,QAA2B,uBAA3B;AACA,OAAO,cAAP;AACA,SAASC,WAAT,QAA4B,QAA5B;AAEA,eAAe,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;AAAA,SAE1CM,KAF0C,GAElC;AACJC,MAAAA,WAAW,EAAEJ,UAAU,CAACK,IAAI,CAACC,GAAL,EAAD,CADnB;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,IAAI,EAAE,EAHF;AAIJC,MAAAA,IAAI,EAAE;AAJF,KAFkC;;AAAA,SAS1CC,cAT0C,GASzB,MAAM;AACnB;AACAT,MAAAA,WAAW,CAAC,MAAM;AACd,cAAMG,WAAW,GAAGJ,UAAU,CAACK,IAAI,CAACC,GAAL,EAAD,CAA9B;AACA,aAAKK,QAAL,CAAc;AAACP,UAAAA;AAAD,SAAd;AACH,OAHU,EAGR,IAHQ,CAAX;AAIH,KAfyC;;AAAA,SAiB1CQ,UAjB0C,GAiB7B,YAAY;AACrB;AADqB,mBAEQ,MAAMd,UAAU,CAAC,QAAD,CAFxB;AAAA,YAEbS,IAFa,QAEbA,IAFa;AAAA,YAEPC,IAFO,QAEPA,IAFO;AAAA,YAEDC,IAFC,QAEDA,IAFC,EAIrB;;;AACA,WAAKE,QAAL,CAAc;AAAEJ,QAAAA,IAAF;AAAQC,QAAAA,IAAR;AAAcC,QAAAA;AAAd,OAAd;AACH,KAvByC;;AAAA,SAyB1CI,sBAzB0C,GAyBhBL,IAAD,IAAU;AAC/B,UAAIA,IAAI,GAAI,CAAZ,EAAgB;AACZ,eAAO,2BAAP;AACH,OAFD,MAEO;AACH,eAAQA,IAAI,GAAC,MAAb;AACH;AACJ,KA/ByC;AAAA;;AAiC1CM,EAAAA,iBAAiB,GAAG;AAChB;AACA,SAAKJ,cAAL,GAFgB,CAIhB;;AACA,SAAKE,UAAL;AACH;;AAEDG,EAAAA,MAAM,GAAG;AAAA,wBAC4C,KAAKZ,KADjD;AAAA,UACGC,WADH,eACGA,WADH;AAAA,UACgBG,IADhB,eACgBA,IADhB;AAAA,UACsBS,WADtB,eACsBA,WADtB;AAAA,UACmCP,IADnC,eACmCA,IADnC;AAEL,UAAMQ,OAAO,8CAAuCR,IAAvC,YAAb;AACA,UAAMS,QAAQ,GAAGnB,WAAW,CAACoB,IAAZ,CAAiB,CAAjB,EAAoBD,QAArC;AAEA,WACI;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAcA,QAAd,CADJ,EAEI;AAAG,MAAA,IAAI,EAAC,aAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOd,WAAP,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOG,IAAP,CAFJ,EAGI;AAAK,MAAA,GAAG,EAAEU,OAAV;AAAmB,MAAA,GAAG,EAAC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOD,WAAP,CAJJ,CAFJ,CALJ,CADJ;AAiBH;;AA/DyC","sourcesContent":["import React, { Component } from 'react';\nimport { reqWeather } from '../../api';\nimport memoryUtils from '../../utils/memoryUtils';\nimport { formatDate } from '../../utils/dateUtils';\nimport './index.less';\nimport { setInterval } from 'timers';\n\nexport default class Header extends Component {\n    \n    state = {\n        currentTime: formatDate(Date.now()),\n        name: '',\n        temp: '',\n        icon: '',\n    }\n\n    getCurrentTime = () => {\n        // get the current time per 1 second and then update the state of currentTime\n        setInterval(() => {\n            const currentTime = formatDate(Date.now());\n            this.setState({currentTime});\n        }, 1000);\n    }\n\n    getWeather = async () => {\n        // get the weather data by invoking the asynchronus API\n        const { name, temp, icon } = await reqWeather('Sydney');\n\n        // update the state\n        this.setState({ name, temp, icon });\n    }\n\n    convertKelvinToCelsius = (temp) => {\n        if (temp < (0)) {\n            return 'below absolute zero (0 K)';\n        } else {\n            return (temp-273.15);\n        }\n    }\n\n    componentDidMount() {\n        // get the current time\n        this.getCurrentTime();\n\n        // get the current weather\n        this.getWeather();\n    }\n\n    render() {\n        const { currentTime, name, description, icon } = this.state;\n        const iconUrl = `http://openweathermap.org/img/wn/${icon}@2x.png`;\n        const username = memoryUtils.user[0].username;\n\n        return (\n            <div className=\"header\">\n                <div className=\"header-top\">\n                    <span>Hello, {username}</span>\n                    <a href=\"javascript:\">Logout</a>\n                </div>\n                <div className=\"header-bottom\">\n                    <div className=\"header-bottom-left\">Main Page</div>\n                    <div className=\"header-bottom-right\">\n                        <span>{currentTime}</span>\n                        <span>{name}</span>\n                        <img src={iconUrl} alt=\"weather\"/>\n                        <span>{description}</span>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}