{"ast":null,"code":"import\"antd/es/button/style\";import _Button from\"antd/es/button\";import\"antd/es/form/style\";import _Form from\"antd/es/form\";import\"antd/es/input/style\";import _Input from\"antd/es/input\";import\"antd/es/icon/style\";import _Icon from\"antd/es/icon\";import _regeneratorRuntime from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/regenerator\";import\"antd/es/message/style\";import _message from\"antd/es/message\";import _asyncToGenerator from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/stevenl/Desktop/Projects/Content-Management-System/client/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import LinkButton from'../../components/link-button';import{reqSignup}from'../../api';import'./SignUp.less';import logo from'../../assets/images/logo.jpeg';var SignUp=/*#__PURE__*/function(_Component){_inherits(SignUp,_Component);function SignUp(){var _getPrototypeOf2;var _this;_classCallCheck(this,SignUp);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(SignUp)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.handleSubmit=function(e){// the default action that belongs to the event will be cancelled !! \ne.preventDefault();// validate the value from input\n_this.props.form.validateFields(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(err,values){var username,password,email,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(err){_context.next=9;break;}//console.log('Submit success!', values);\nusername=values.username,password=values.password,email=values.email;_context.next=4;return reqSignup(username,password,email);case 4:response=_context.sent;_message.success('Sign up successful!',response);_this.props.history.replace('/login');_context.next=10;break;case 9:console.log('Submit is failed!');case 10:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}());};_this.validatePassword=function(rule,value,callback){console.log('validatePassword',rule,value);if(!value){callback('Please input your password!');}else if(value.length<4){callback('Please input at least 4 characters!');}else if(value.length>12){callback('Please do not input more than 12 characters!');}else if(!/^[a-zA-Z0-9_]+$/.test(value)){callback('Please includes english and numbers!');}else{callback();}};_this.toLogin=function(){_this.props.history.push('/login');};return _this;}_createClass(SignUp,[{key:\"render\",value:function render(){// get form object \nvar form=this.props.form;var getFieldDecorator=form.getFieldDecorator;return React.createElement(\"div\",{className:\"signup\"},React.createElement(\"header\",{className:\"signup-header\"},React.createElement(\"img\",{src:logo,alt:\"logo\"}),React.createElement(\"h1\",null,\"Content Management System\")),React.createElement(\"section\",{className:\"signup-content\"},React.createElement(\"h2\",null,\"Sign Up\"),React.createElement(_Form,{onSubmit:this.handleSubmit,className:\"signup-form\"},React.createElement(_Form.Item,null,getFieldDecorator('username',{rules:[{required:true,whitespace:true,message:'Please input your username!'},{min:4,message:'Please input at least 4 characters!'},{max:12,message:'Please do not input more than 12 characters!'},{pattern:/^[a-zA-Z0-9_]+$/,message:'Please includes english and numbers!'}]})(React.createElement(_Input,{prefix:React.createElement(_Icon,{type:\"user\",style:{color:'rgba(0,0,0,.25)'}}),placeholder:\"Username\"}))),React.createElement(_Form.Item,null,getFieldDecorator('password',{rules:[{validator:this.validatePassword}]})(React.createElement(_Input,{prefix:React.createElement(_Icon,{type:\"lock\",style:{color:'rgba(0,0,0,.25)'}}),type:\"password\",placeholder:\"Password\"}))),React.createElement(_Form.Item,null,getFieldDecorator('email',{rules:[{required:true,whitespace:true,message:'Please input your email!'},{min:4,message:'Please input at least 4 characters!'},{max:100,message:'Please do not input more than 100 characters!'}]})(React.createElement(_Input,{prefix:React.createElement(_Icon,{type:\"solution\",style:{color:'rgba(0,0,0,.25)'}}),type:\"email\",placeholder:\"Email\"}))),React.createElement(_Form.Item,null,React.createElement(_Button,{type:\"primary\",htmlType:\"submit\",className:\"signup-form-button\"},\"Sign up\"),\"Or \",React.createElement(LinkButton,{onClick:this.toLogin},\"back to login!\")))));}}]);return SignUp;}(Component);//Form.create()() is a higher order function(HOF) and WrappedLogin is a higher order component(HOC)\nvar WrappedSignup=_Form.create()(SignUp);export default WrappedSignup;","map":{"version":3,"sources":["/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/containers/SignUp/SignUp.js"],"names":["React","Component","LinkButton","reqSignup","logo","SignUp","handleSubmit","e","preventDefault","props","form","validateFields","err","values","username","password","email","response","success","history","replace","console","log","validatePassword","rule","value","callback","length","test","toLogin","push","getFieldDecorator","rules","required","whitespace","message","min","max","pattern","color","validator","WrappedSignup","create"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport LinkButton from '../../components/link-button';\nimport { Form, Icon, Input, Button, message } from 'antd';\nimport { reqSignup } from '../../api';\n\nimport './SignUp.less';\nimport logo from '../../assets/images/logo.jpeg';\n\nclass SignUp extends Component {\n\n    handleSubmit = e => {\n        // the default action that belongs to the event will be cancelled !! \n        e.preventDefault();\n        // validate the value from input\n        this.props.form.validateFields(async (err, values) => {\n            if (!err) {\n                //console.log('Submit success!', values);\n                const { username, password, email } = values;\n                const response = await reqSignup(username, password, email);\n                message.success('Sign up successful!', response);\n                this.props.history.replace('/login');              \n            } else {\n                console.log('Submit is failed!');\n            }\n        });\n    };\n\n    // custom validation for password\n    validatePassword = (rule, value, callback) => {\n        console.log('validatePassword', rule, value);\n        if (!value) {\n            callback('Please input your password!');\n        } else if (value.length < 4) {\n            callback('Please input at least 4 characters!');\n        } else if (value.length > 12) {\n            callback('Please do not input more than 12 characters!');\n        } else if (!/^[a-zA-Z0-9_]+$/.test(value)) {\n            callback('Please includes english and numbers!');\n        } else {\n            callback();\n        }\n    }\n\n    toLogin = () => {\n        this.props.history.push('/login');\n    }\n\n    render() {\n        // get form object \n        const form = this.props.form;\n        const { getFieldDecorator } = form;\n\n        return (\n            <div className=\"signup\">\n                <header className=\"signup-header\">\n                    <img src={logo} alt=\"logo\" />\n                    <h1>Content Management System</h1>\n                </header>\n                <section className=\"signup-content\">\n                    <h2>Sign Up</h2>\n                    <Form onSubmit={this.handleSubmit} className=\"signup-form\">\n                        <Form.Item>\n                            {\n                                /* \n                                    setup the input for collecting data and validating the values\n                                */\n                            }\n                            {getFieldDecorator('username', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        whitespace: true,\n                                        message: 'Please input your username!'\n                                    },\n                                    {\n                                        min: 4,\n                                        message: 'Please input at least 4 characters!'\n                                    },\n                                    {\n                                        max: 12,\n                                        message: 'Please do not input more than 12 characters!'\n                                    },\n                                    {\n                                        pattern: /^[a-zA-Z0-9_]+$/,\n                                        message: 'Please includes english and numbers!'\n                                    },\n                                ],\n                            })(<Input\n                                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                placeholder=\"Username\"\n                            />,\n                            )}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('password', {\n                                rules: [\n                                    {\n                                        validator: this.validatePassword\n                                    }],\n                            })(<Input\n                                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                type=\"password\"\n                                placeholder=\"Password\"\n                            />)}\n                        </Form.Item>\n                        <Form.Item>\n                            {getFieldDecorator('email', {\n                                rules: [\n                                    {\n                                        required: true,\n                                        whitespace: true,\n                                        message: 'Please input your email!'\n                                    },\n                                    {\n                                        min: 4,\n                                        message: 'Please input at least 4 characters!'\n                                    },\n                                    {\n                                        max: 100,\n                                        message: 'Please do not input more than 100 characters!'\n                                    },\n                                ],\n                            })(<Input\n                                prefix={<Icon type=\"solution\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                                type=\"email\"\n                                placeholder=\"Email\"\n                            />)}\n                        </Form.Item>\n                        <Form.Item>\n                            <Button type=\"primary\" htmlType=\"submit\" className=\"signup-form-button\">\n                                Sign up\n                            </Button>\n                            Or <LinkButton onClick={this.toLogin}>back to login!</LinkButton>\n                        </Form.Item>\n                    </Form>\n                </section>\n            </div>\n        )\n    }\n}\n\n//Form.create()() is a higher order function(HOF) and WrappedLogin is a higher order component(HOC)\nconst WrappedSignup = Form.create()(SignUp);\nexport default WrappedSignup;\n"]},"metadata":{},"sourceType":"module"}