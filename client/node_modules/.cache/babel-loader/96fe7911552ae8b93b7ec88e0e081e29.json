{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _arrayPrototype = _interopRequireDefault(require(\"array.prototype.find\"));\n\nvar _getComponentName = _interopRequireDefault(require(\"./helpers/getComponentName\"));\n\nvar _renderableChildren = _interopRequireDefault(require(\"./helpers/renderableChildren\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction onlyTypes(types, children, componentName) {\n  if (!children.every(function (child) {\n    return child && (0, _arrayPrototype[\"default\"])(types, function (Type) {\n      return Type === '*' || child.type === Type;\n    });\n  })) {\n    var typeNames = types.map(_getComponentName[\"default\"]).join(', or ');\n    return new TypeError(\"`\".concat(componentName, \"` only accepts children of type \").concat(typeNames));\n  }\n\n  return null;\n}\n\nfunction isRequired(types, children, componentName) {\n  if (children.length === 0) {\n    var typeNames = types.map(_getComponentName[\"default\"]).join(', or ');\n    return new TypeError(\"`\".concat(componentName, \"` requires at least one node of type \").concat(typeNames));\n  }\n\n  return null;\n}\n\nfunction childrenOfType() {\n  for (var _len = arguments.length, types = new Array(_len), _key = 0; _key < _len; _key++) {\n    types[_key] = arguments[_key];\n  }\n\n  if (types.length < 1) {\n    throw new TypeError('childrenOfType: at least 1 type is required');\n  }\n\n  function validator(props, propName, componentName) {\n    return onlyTypes(types, (0, _renderableChildren[\"default\"])(props[propName]), componentName);\n  }\n\n  validator.isRequired = function (props, propName, componentName) {\n    var children = (0, _renderableChildren[\"default\"])(props[propName]);\n    return isRequired(types, children, componentName) || onlyTypes(types, children, componentName);\n  };\n\n  return (0, _wrapValidator[\"default\"])(validator, 'childrenOfType', types);\n}\n\nvar _default = childrenOfType;\nexports[\"default\"] = _default;","map":null,"metadata":{},"sourceType":"script"}