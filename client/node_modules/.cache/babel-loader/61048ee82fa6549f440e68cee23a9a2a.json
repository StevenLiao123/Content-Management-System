{"ast":null,"code":"'use strict';\n\nvar map = function (arr, mapper) {\n  var mapped = [];\n\n  for (var i = 0; i < arr.length; i += 1) {\n    mapped.push(mapper(arr[i], i));\n  }\n\n  return mapped;\n};\n\nvar expecteds = [['HTMLElement', 'article'], ['HTMLElement', 'section'], ['HTMLBaseFontElement', 'basefont'], ['HTMLPhraseElement', 'cite'], ['HTMLElement', 'noscript'], ['HTMLBGSoundElement', 'bgsound'], ['HTMLPhraseElement', 'blink'], ['HTMLElement', 'multicol'], ['HTMLNextIdElement', 'nextid'], ['HTMLElement', 'rb'], ['HTMLElement', 'spacer'], ['HTMLAnchorElement', 'a'], // ['HTMLAppletElement', 'applet'], // commented out due to IE 11 java update popup\n['HTMLAreaElement', 'area'], ['HTMLAudioElement', 'audio'], ['HTMLBaseElement', 'base'], ['HTMLBodyElement', 'body'], ['HTMLBRElement', 'br'], ['HTMLButtonElement', 'button'], ['HTMLCanvasElement', 'canvas'], ['HTMLContentElement', 'content'], ['HTMLDataElement', 'data'], ['HTMLDataListElement', 'datalist'], ['HTMLDialogElement', 'dialog'], ['HTMLDirectoryElement', 'dir'], ['HTMLDivElement', 'div'], ['HTMLDListElement', 'dl'], ['HTMLEmbedElement', 'embed'], ['HTMLFieldSetElement', 'fieldset'], ['HTMLFontElement', 'font'], ['HTMLFormElement', 'form'], ['HTMLFrameElement', 'frame'], ['HTMLFrameSetElement', 'frameset'], ['HTMLHeadElement', 'head'], ['HTMLHeadingElement', 'h1'], ['HTMLHeadingElement', 'h2'], ['HTMLHeadingElement', 'h3'], ['HTMLHeadingElement', 'h4'], ['HTMLHeadingElement', 'h5'], ['HTMLHeadingElement', 'h6'], ['HTMLHtmlElement', 'html'], ['HTMLHRElement', 'hr'], ['HTMLIFrameElement', 'iframe'], ['HTMLImageElement', 'img'], ['HTMLInputElement', 'input'], ['HTMLIsIndexElement', 'index'], // in HTML5, this is HTMLUnknownElement\n['HTMLKeygenElement', 'keygen', 'HTMLBlockElement'], ['HTMLLabelElement', 'label'], ['HTMLLegendElement', 'legend'], ['HTMLLIElement', 'li'], ['HTMLLinkElement', 'link'], ['HTMLElement', 'main'], // in IE 9-11, this is HTMLUnknownElement\n['HTMLMapElement', 'map'], ['HTMLMarqueeElement', 'marquee'], ['HTMLMenuElement', 'menu'], ['HTMLMetaElement', 'meta'], ['HTMLMeterElement', 'meter'], ['HTMLModElement', 'del'], ['HTMLModElement', 'ins'], ['HTMLObjectElement', 'object'], ['HTMLOListElement', 'ol'], ['HTMLOptGroupElement', 'optgroup'], ['HTMLOptionElement', 'option'], ['HTMLOutputElement', 'output'], ['HTMLParagraphElement', 'p'], ['HTMLParamElement', 'param'], ['HTMLPictureElement', 'picture'], ['HTMLPreElement', 'pre'], ['HTMLProgressElement', 'progress'], ['HTMLQuoteElement', 'q'], ['HTMLQuoteElement', 'blockquote', 'HTMLBlockElement'], ['HTMLScriptElement', 'script'], ['HTMLPictureElement', 'picture'], ['HTMLSelectElement', 'select'], ['HTMLShadowElement', 'shadow'], ['HTMLSourceElement', 'source'], ['HTMLSpanElement', 'span'], ['HTMLStyleElement', 'style'], ['HTMLTableElement', 'table'], ['HTMLTableCaptionElement', 'caption'], ['HTMLTableCellElement', 'td', 'HTMLTableDataCellElement'], ['HTMLTableCellElement', 'th', 'HTMLTableHeaderCellElement'], ['HTMLTableRowElement', 'tr'], ['HTMLTableColElement', 'col'], ['HTMLTableColElement', 'colgroup'], ['HTMLTableSectionElement', 'tbody'], ['HTMLTableSectionElement', 'thead'], ['HTMLTableSectionElement', 'tfoot'], ['HTMLTemplateElement', 'template'], ['HTMLTextAreaElement', 'textarea'], ['HTMLTimeElement', 'time'], ['HTMLTitleElement', 'title'], ['HTMLTrackElement', 'track'], ['HTMLUListElement', 'ul'], ['HTMLVideoElement', 'video']]; // eslint-disable-next-line consistent-return, max-params\n\nvar getConstructor = function getTagConstructor(tag, constructor, unknown) {\n  if (typeof document !== 'undefined' && typeof document.createElement === 'function') {\n    var actual = document.createElement(tag).constructor;\n\n    if (actual !== unknown) {\n      return actual;\n    }\n  }\n};\n\nmodule.exports = function getData() {\n  var unknown = global.HTMLUnknownElement;\n  return {\n    all: global.HTMLElement,\n    elements: map(expecteds, function (expected) {\n      var constructorName = expected[0];\n      var tag = expected[1];\n      var alternate = expected[2];\n      var constructor = global[constructorName];\n      var altConstructor = alternate && global[alternate];\n      return {\n        constructor: getConstructor(tag, altConstructor || constructor, unknown),\n        constructorName: altConstructor ? alternate : constructorName,\n        expectedConstructor: altConstructor || constructor,\n        tag: tag\n      };\n    }),\n    unknown: unknown\n  };\n};","map":null,"metadata":{},"sourceType":"script"}