{"ast":null,"code":"import \"antd/es/icon/style\";\nimport _Icon from \"antd/es/icon\";\nimport \"antd/es/menu/style\";\nimport _Menu from \"antd/es/menu\";\nvar _jsxFileName = \"/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/components/left-nav/index.js\";\nimport React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport menuList from '../../config/menuConfig';\nimport logo from '../../assets/images/logo.jpeg';\nimport './index.less';\nconst SubMenu = _Menu.SubMenu;\n\nclass LeftNav extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getMenuNodes = menuList => {\n      // get the path of current route\n      const path = this.props.location.pathname;\n      return menuList.map(item => {\n        if (!item.children) {\n          return React.createElement(_Menu.Item, {\n            key: item.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: item.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22\n            },\n            __self: this\n          }, React.createElement(_Icon, {\n            type: item.icon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, item.title)));\n        } else {\n          // find a subitem that is macthed by the current route\n          const subItem = item.children.find(subItem => subItem.key === path);\n          this.openKey = item.key;\n          return React.createElement(SubMenu, {\n            key: item.key,\n            title: React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 37\n              },\n              __self: this\n            }, React.createElement(_Icon, {\n              type: item.icon,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 38\n              },\n              __self: this\n            }), React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 39\n              },\n              __self: this\n            }, item.title)),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }, this.getMenuNodes(item.children));\n        }\n      });\n    };\n  }\n\n  //  execute the getMenuNodes function before the first render\n  componentWillMount() {\n    this.menuNodes = this.getMenuNodes(menuList);\n  }\n\n  render() {\n    // get the path of current route\n    const path = this.props.location.pathname;\n    return React.createElement(\"div\", {\n      className: \"left-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/\",\n      className: \"left-nav-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"CMS\")), React.createElement(_Menu, {\n      selectedKeys: [path],\n      defaultOpenKeys: ['/pieChart'],\n      mode: \"inline\",\n      theme: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, this.menuNodes));\n  }\n\n}\n\nexport default withRouter(LeftNav);","map":{"version":3,"sources":["/Users/stevenl/Desktop/Projects/Content-Management-System/client/src/components/left-nav/index.js"],"names":["React","Component","Link","withRouter","menuList","logo","SubMenu","LeftNav","getMenuNodes","path","props","location","pathname","map","item","children","key","icon","title","subItem","find","openKey","componentWillMount","menuNodes","render"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AAGA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,IAAP,MAAiB,+BAAjB;AACA,OAAO,cAAP;MAGQC,O,SAAAA,O;;AAER,MAAMC,OAAN,SAAsBN,SAAtB,CAAgC;AAAA;AAAA;;AAAA,SAE5BO,YAF4B,GAEZJ,QAAD,IAAc;AACzB;AACA,YAAMK,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAjC;AAEA,aAAOR,QAAQ,CAACS,GAAT,CAAaC,IAAI,IAAI;AACxB,YAAI,CAACA,IAAI,CAACC,QAAV,EAAoB;AAChB,iBACI,0BAAM,IAAN;AAAW,YAAA,GAAG,EAAED,IAAI,CAACE,GAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,oBAAC,IAAD;AAAM,YAAA,EAAE,EAAEF,IAAI,CAACE,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAM,YAAA,IAAI,EAAEF,IAAI,CAACG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOH,IAAI,CAACI,KAAZ,CAFJ,CADJ,CADJ;AAQH,SATD,MASO;AACH;AACA,gBAAMC,OAAO,GAAGL,IAAI,CAACC,QAAL,CAAcK,IAAd,CAAmBD,OAAO,IAAIA,OAAO,CAACH,GAAR,KAAgBP,IAA9C,CAAhB;AACA,eAAKY,OAAL,GAAeP,IAAI,CAACE,GAApB;AAEA,iBACI,oBAAC,OAAD;AACI,YAAA,GAAG,EAAEF,IAAI,CAACE,GADd;AAEI,YAAA,KAAK,EACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACI;AAAM,cAAA,IAAI,EAAEF,IAAI,CAACG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOH,IAAI,CAACI,KAAZ,CAFJ,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAUQ,KAAKV,YAAL,CAAkBM,IAAI,CAACC,QAAvB,CAVR,CADJ;AAeH;AACJ,OA/BM,CAAP;AAgCH,KAtC2B;AAAA;;AAwC5B;AACAO,EAAAA,kBAAkB,GAAG;AACjB,SAAKC,SAAL,GAAiB,KAAKf,YAAL,CAAkBJ,QAAlB,CAAjB;AACH;;AAEDoB,EAAAA,MAAM,GAAG;AACL;AACA,UAAMf,IAAI,GAAG,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,QAAjC;AAGA,WACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,GAAT;AAAa,MAAA,SAAS,EAAC,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEP,IAAV;AAAgB,MAAA,GAAG,EAAC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CADJ,EAKI;AACI,MAAA,YAAY,EAAE,CAACI,IAAD,CADlB;AAEI,MAAA,eAAe,EAAE,CAAC,WAAD,CAFrB;AAGI,MAAA,IAAI,EAAC,QAHT;AAII,MAAA,KAAK,EAAC,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOQ,KAAKc,SAPb,CALJ,CADJ;AAkBH;;AApE2B;;AAuEhC,eAAepB,UAAU,CAACI,OAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Menu, Icon } from 'antd';\n\nimport menuList from '../../config/menuConfig';\nimport logo from '../../assets/images/logo.jpeg';\nimport './index.less';\n\n\nconst { SubMenu } = Menu;\n\nclass LeftNav extends Component {\n\n    getMenuNodes = (menuList) => {\n        // get the path of current route\n        const path = this.props.location.pathname;\n\n        return menuList.map(item => {\n            if (!item.children) {\n                return (\n                    <Menu.Item key={item.key}>\n                        <Link to={item.key} >\n                            <Icon type={item.icon} />\n                            <span>{item.title}</span>\n                        </Link>\n                    </Menu.Item>\n                )\n            } else {\n                // find a subitem that is macthed by the current route\n                const subItem = item.children.find(subItem => subItem.key === path);\n                this.openKey = item.key;\n\n                return (\n                    <SubMenu\n                        key={item.key}\n                        title={\n                            <span>\n                                <Icon type={item.icon} />\n                                <span>{item.title}</span>\n                            </span>\n                        }\n                    >\n                        {\n                            this.getMenuNodes(item.children)\n                        }\n                    </SubMenu>\n                )\n            }\n        });\n    }\n\n    //  execute the getMenuNodes function before the first render\n    componentWillMount() {\n        this.menuNodes = this.getMenuNodes(menuList);\n    }\n\n    render() {\n        // get the path of current route\n        const path = this.props.location.pathname;\n\n\n        return (\n            <div className=\"left-nav\">\n                <Link to='/' className=\"left-nav-header\">\n                    <img src={logo} alt=\"logo\" />\n                    <h1>CMS</h1>\n                </Link>\n                <Menu\n                    selectedKeys={[path]}\n                    defaultOpenKeys={['/pieChart']}\n                    mode=\"inline\"\n                    theme=\"dark\"\n                >\n                    {\n                        this.menuNodes\n                    }\n                </Menu>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(LeftNav);"]},"metadata":{},"sourceType":"module"}